#Uses python3
import sys
import math

class edge:
    __init__ (a, b, w)
    self.a = a
    self.b = b
    self.w = w


def dist(x1, y1, x2, y2):
    return math.sqrt((x1-x2)**2 + (y1-y2)**2)

def clustering(adj, weight, k):
    x = set()
    edgeWeights = []
    x.add(0)

    while len(x) != len(adj):
        temp = set()
        for u in x:
            for v in adj[u]:
                if v not in x:
                    temp.add((u,v))
        edge = sorted(temp, key=lambda e: weight[e[0]][e[1]])[0]

        edgeWeights.append(edge)
        x.add(edge[1])

    edgeWeights = sorted(edgeWeights, key=lambda e: weight[e[0]][e[1]])

    d = edgeWeights[-(k-1)]

    return weight[d[0]][d[1]]


if __name__ == '__main__':

    n = int(sys.stdin.readline())
    x = []
    y = []
    for _ in range(n):
        a, b = map(int, sys.stdin.readline().split())
        x.append(a)
        y.append(b)
    k = int(sys.stdin.readline())

    adj = [[] for _ in range(n)]
    weight = [[0]*n for _ in range(n)]
    for i in range(n):
        adj[i] = list(v for v in range(n) if v != i)
        for j in range(n):
            if i != j:
                w = dist(x[i], y[i], x[j], y[j])
                weight[i][j] = w
                weight[j][i] = w

    #weight = [[0, 4.242640687119285, 5.385164807134504, 6.082762530298219, 5.0990195135927845, 2.23606797749979, 5.0, 2.0, 5.385164807134504, 3.605551275463989, 1.4142135623730951, 5.0], [4.242640687119285, 0, 2.23606797749979, 5.0, 4.47213595499958, 4.123105625617661, 1.0, 5.830951894845301, 5.385164807134504, 1.0, 4.47213595499958, 3.605551275463989], [5.385164807134504, 2.23606797749979, 0, 7.211102550927978, 6.708203932499369, 6.0, 2.8284271247461903, 7.280109889280518, 7.615773105863909, 3.1622776601683795, 6.082762530298219, 5.830951894845301], [6.082762530298219, 5.0, 7.211102550927978, 0, 1.0, 4.0, 4.47213595499958, 6.082762530298219, 1.4142135623730951, 4.242640687119285, 5.0, 1.4142135623730951], [5.0990195135927845, 4.47213595499958, 6.708203932499369, 1.0, 0, 3.0, 4.123105625617661, 5.0990195135927845, 1.0, 3.605551275463989, 4.0, 1.0], [2.23606797749979, 4.123105625617661, 6.0, 4.0, 3.0, 0, 4.47213595499958, 2.23606797749979, 3.1622776601683795, 3.1622776601683795, 1.0, 3.1622776601683795], [5.0, 1.0, 2.8284271247461903, 4.47213595499958, 4.123105625617661, 4.47213595499958, 0, 6.4031242374328485, 5.0990195135927845, 1.4142135623730951, 5.0, 3.1622776601683795], [2.0, 5.830951894845301, 7.280109889280518, 6.082762530298219, 5.0990195135927845, 2.23606797749979, 6.4031242374328485, 0, 5.0, 5.0, 1.4142135623730951, 5.385164807134504], [5.385164807134504, 5.385164807134504, 7.615773105863909, 1.4142135623730951, 1.0, 3.1622776601683795, 5.0990195135927845, 5.0, 0, 4.47213595499958, 4.123105625617661, 2.0], [3.605551275463989, 1.0, 3.1622776601683795, 4.242640687119285, 3.605551275463989, 3.1622776601683795, 1.4142135623730951, 5.0, 4.47213595499958, 0, 3.605551275463989, 2.8284271247461903], [1.4142135623730951, 4.47213595499958, 6.082762530298219, 5.0, 4.0, 1.0, 5.0, 1.4142135623730951, 4.123105625617661, 3.605551275463989, 0, 4.123105625617661], [5.0, 3.605551275463989, 5.830951894845301, 1.4142135623730951, 1.0, 3.1622776601683795, 3.1622776601683795, 5.385164807134504, 2.0, 2.8284271247461903, 4.123105625617661, 0]]
    #adj = [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11], [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11], [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11], [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11], [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
    #k = 3

    print("{0:.9f}".format(clustering(adj, weight, k)))
